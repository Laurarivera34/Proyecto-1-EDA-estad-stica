# 5. Valores únicos
# ------------------------------
valores_unicos <- data.frame(Valores_unicos = sort(unique(cartagena$servicios)))
valores_unicos_html <- valores_unicos %>%
kable("html", caption = "Valores únicos observados") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(valores_unicos_html, "results/unicos_servicios.html")
# ------------------------------
# 6. Tabla resumen con porcentaje y etiquetas
# ------------------------------
tabla_resumen <- cartagena %>%
count(servicios) %>%
mutate(
n = as.numeric(n),
porc = round(100 * n / sum(n), 1),
servicios_label = case_when(
servicios == 0 ~ "Sin carencias",
servicios == 1 ~ "1 carencia",
servicios == 2 ~ "2 carencias",
servicios == 3 ~ "3 carencias",
servicios == 4 ~ "4 carencias",
servicios == 5 ~ "5 carencias",
TRUE ~ "No sabe/NA"
)
)
tabla_resumen_html <- tabla_resumen %>%
select(servicios_label, n, porc) %>%
kable("html", caption = "Distribución de carencias de acceso a servicios públicos") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(tabla_resumen_html, "results/tabla_resumen_servicios.html")
# ------------------------------
# 7. Gráfico (solo PNG, no HTML)
# ------------------------------
grafico_servicios <- ggplot(tabla_resumen, aes(x = servicios_label, y = porc)) +
geom_col(fill = "#003366", alpha = 0.9) +
geom_text(aes(label = paste0(porc, "%")), vjust = -0.4, size = 3.5, color = "black") +
labs(
title = "Carencia de acceso a servicios públicos",
subtitle = "Distribución de hogares según número de carencias",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
print(grafico_servicios)
ggsave("results/grafico_servicios.png",
plot = grafico_servicios, width = 10, height = 6, dpi = 300)
# ------------------------------
# 8. Notas de método
# ------------------------------
notas_metodo <- "
Notas de método:
- Se estandarizaron las etiquetas y las categorías con valores entre 0 y 5.
- No se encontraron valores fuera del rango 0–5.
- Las barras de error no se aplican porque la variable es discreta.
- Los valores NA se reportan explícitamente y no fueron imputados.
- Las categorías con frecuencia menor al 3% se mantuvieron dado su significado sustantivo.
"
writeLines(notas_metodo, "results/notas_metodo_servicios.txt")
grafico_servicios <- ggplot(tabla_resumen, aes(x = servicios_label, y = porc)) +
geom_col(fill = "#003366", alpha = 0.9) +
geom_errorbar(aes(ymin = ci_inf, ymax = ci_sup),
width = 0.2, color = "gray30", linewidth = 0.6) +
geom_text(aes(label = paste0(round(porc, 1), "%")),
vjust = -0.4, size = 3.5, color = "black") +
labs(
title = "Carencia de acceso a servicios públicos",
subtitle = "Distribución de hogares según número de carencias (con IC95%)",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
# Guardar sin HTML
ggsave("results/grafico_servicios.png", plot = grafico_servicios, width = 10, height = 6, dpi = 300)
# ------------------------------
# 7. Gráfico (solo PNG, no HTML)
# ------------------------------
grafico4 <- ggplot(tabla_resumen, aes(x = servicios_label, y = porc)) +
geom_col(fill = "#003366", alpha = 0.9) +
geom_text(aes(label = paste0(porc, "%")), vjust = -0.4, size = 3.5, color = "black") +
labs(
title = "Carencia de acceso a servicios públicos",
subtitle = "Distribución de hogares según número de carencias",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
print(grafico4)
ggsave("results/grafico4.png",
plot = grafico4, width = 10, height = 6, dpi = 300)
# Tipo de variable
str(cartagena$servicios)
# Tabla sin ponderar
tabla_simple_serv <- cartagena %>%
count(servicios) %>%
mutate(
n = as.numeric(n),
porc = round(100 * n / sum(n), 1),
tipo = "Sin ponderar",
label = as.character(servicios)
)
# Tabla ponderada con factor de expansión
tabla_pond_serv <- cartagena %>%
group_by(servicios) %>%
summarise(n = sum(f_exp_hog, na.rm = TRUE), .groups = "drop") %>%
mutate(
porc = round(100 * n / sum(n), 1),
tipo = "Ponderado",
label = as.character(servicios)
)
# Comparación sin vs con ponderación
tabla_comp_serv <- bind_rows(tabla_simple_serv, tabla_pond_serv)
# Guardar tabla en Excel
write_xlsx(
tabla_comp_serv,
"results/tabla2.xlsx"
)
# Gráfico comparativo
grafico4 <- ggplot(tabla_comp_serv, aes(x = label, y = porc, fill = tipo)) +
geom_col(position = "dodge", alpha = 0.9) +
geom_text(
aes(label = paste0(porc, "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5
) +
scale_fill_manual(values = c("Sin ponderar" = "#999999", "Ponderado" = "#003366")) +
labs(
title = "Carencias en servicios básicos en los hogares",
subtitle = "Comparación entre resultados sin ponderar y ponderados",
x = "Número de servicios faltantes",
y = "Porcentaje de hogares",
fill = "Tipo de cálculo"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
print(grafico4)
ggsave("results/grafico4.png",
plot = grafico4, width = 10, height = 6, dpi = 300)
# Librerías necesarias
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
# ============================
# 1. Tipo de variable (estructura)
# ============================
estructura <- data.frame(estructura = capture.output(str(cartagena$servicios)))
estructura_html <- estructura %>%
kable("html", caption = "Estructura de la variable: Carencia de servicios públicos") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(estructura_html, "results/estructura_servicios.html")
# ============================
# 2. Tablas sin y con ponderación
# ============================
# Sin ponderar
tabla_simple_serv <- cartagena %>%
count(servicios) %>%
mutate(
n = as.numeric(n),
porc = round(100 * n / sum(n), 1),
tipo = "Sin ponderar",
label = as.character(servicios)
)
# Ponderada (usando factor de expansión)
tabla_pond_serv <- cartagena %>%
group_by(servicios) %>%
summarise(n = sum(f_exp_hog, na.rm = TRUE), .groups = "drop") %>%
mutate(
porc = round(100 * n / sum(n), 1),
tipo = "Ponderado",
label = as.character(servicios)
)
# Comparación sin vs con ponderación
tabla_comp_serv <- bind_rows(tabla_simple_serv, tabla_pond_serv)
# Etiquetas descriptivas
tabla_comp_serv <- tabla_comp_serv %>%
mutate(servicios_label = case_when(
label == "0" ~ "Sin carencias",
label == "1" ~ "1 carencia",
label == "2" ~ "2 carencias",
label == "3" ~ "3 carencias",
label == "4" ~ "4 carencias",
label == "5" ~ "5 carencias",
TRUE ~ "No sabe/NA"
))
# ============================
# 3. Guardar tabla comparativa en HTML
# ============================
tabla_comp_html <- tabla_comp_serv %>%
select(servicios_label, tipo, n, porc) %>%
kable("html", caption = "Distribución de carencias (sin y con ponderación)") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(tabla_comp_html, "results/tabla_comp_servicios.html")
# ============================
# 4. Gráfico comparativo (PNG)
# ============================
grafico_servicios <- ggplot(tabla_comp_serv, aes(x = servicios_label, y = porc, fill = tipo)) +
geom_col(position = "dodge", alpha = 0.9) +
geom_text(
aes(label = paste0(porc, "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5
) +
scale_fill_manual(values = c("Sin ponderar" = "#999999", "Ponderado" = "#003366")) +
labs(
title = "Carencias en servicios básicos en los hogares",
subtitle = "Comparación entre resultados sin ponderar y ponderados",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares",
fill = "Tipo de cálculo"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
ggsave("results/grafico_servicios_comparativo.png",
plot = grafico_servicios, width = 10, height = 6, dpi = 300)
# ============================
# 5. Notas de método
# ============================
notas_metodo <- "
Notas de método:
- La variable 'servicios' mide el número de carencias en el acceso a servicios básicos (0 a 5).
- Se comparan los resultados sin ponderar y ponderados por el factor de expansión del hogar (f_exp_hog).
- Las proporciones ponderadas reflejan la distribución representativa de la población.
- No se identificaron valores fuera del rango 0–5.
- Los valores NA se reportan explícitamente y no se imputaron.
- Las categorías con frecuencia menor al 3% se mantuvieron dado su significado sustantivo.
"
writeLines(notas_metodo, "results/notas_metodo_servicios.txt")
grafico_servicios
# Librerías necesarias
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
# ============================
# 1. Tipo de variable (estructura)
# ============================
estructura <- data.frame(estructura = capture.output(str(cartagena$servicios)))
estructura_html <- estructura %>%
kable("html", caption = "Estructura de la variable: Carencia de servicios públicos") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(estructura_html, "results/estructura_servicios.html")
# ============================
# 2. Tablas sin y con ponderación
# ============================
# Sin ponderar
tabla_simple_serv <- cartagena %>%
count(servicios) %>%
mutate(
n_sinpond = as.numeric(n),
porc_sinpond = round(100 * n / sum(n), 1)
) %>%
select(servicios, n_sinpond, porc_sinpond)
# Ponderada (con factor de expansión)
tabla_pond_serv <- cartagena %>%
group_by(servicios) %>%
summarise(n_pond = sum(f_exp_hog, na.rm = TRUE), .groups = "drop") %>%
mutate(porc_pond = round(100 * n_pond / sum(n_pond), 1))
# Unir tablas lado a lado
tabla_comp_serv <- tabla_simple_serv %>%
full_join(tabla_pond_serv, by = "servicios") %>%
mutate(
servicios_label = case_when(
servicios == 0 ~ "Sin carencias",
servicios == 1 ~ "1 carencia",
servicios == 2 ~ "2 carencias",
servicios == 3 ~ "3 carencias",
servicios == 4 ~ "4 carencias",
servicios == 5 ~ "5 carencias",
TRUE ~ "No sabe/NA"
)
) %>%
select(servicios_label, n_sinpond, porc_sinpond, n_pond, porc_pond)
# ============================
# 3. Guardar tabla en HTML
# ============================
tabla_comp_html <- tabla_comp_serv %>%
kable(
"html",
caption = "Distribución de carencias en servicios públicos: comparación ponderada vs sin ponderar",
col.names = c(
"Categoría",
"N (sin ponderar)", "% (sin ponderar)",
"N (ponderado)", "% (ponderado)"
),
digits = 1
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
add_header_above(c(" " = 1, "Sin ponderar" = 2, "Ponderado" = 2))
save_kable(tabla_comp_html, "results/tabla_comp_servicios.html")
# ============================
# 4. Gráfico comparativo (PNG)
# ============================
tabla_grafico <- tabla_comp_serv %>%
tidyr::pivot_longer(cols = c(porc_sinpond, porc_pond),
names_to = "tipo",
values_to = "porc") %>%
mutate(
tipo = ifelse(tipo == "porc_pond", "Ponderado", "Sin ponderar")
)
grafico_servicios <- ggplot(tabla_grafico, aes(x = servicios_label, y = porc, fill = tipo)) +
geom_col(position = "dodge", alpha = 0.9) +
geom_text(
aes(label = paste0(porc, "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5
) +
scale_fill_manual(values = c("Sin ponderar" = "#999999", "Ponderado" = "#003366")) +
labs(
title = "Carencias en servicios básicos en los hogares",
subtitle = "Comparación entre resultados sin ponderar y ponderados",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares",
fill = "Tipo de cálculo"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
ggsave("results/grafico_servicios_comparativo.png",
plot = grafico_servicios, width = 10, height = 6, dpi = 300)
# ============================
# 5. Notas de método
# ============================
notas_metodo <- "
Notas de método:
- La variable 'servicios' mide el número de carencias en el acceso a servicios básicos (0 a 5).
- La tabla presenta los conteos (N) y proporciones (%) comparando resultados sin ponderar y ponderados por el factor de expansión del hogar (f_exp_hog).
- Los valores ponderados reflejan la distribución poblacional representativa.
- No se identificaron valores fuera del rango 0–5.
- Los valores NA se reportan explícitamente y no se imputaron.
- Las categorías con frecuencia menor al 3% se mantuvieron dada su relevancia sustantiva.
"
writeLines(notas_metodo, "results/notas_metodo_servicios.txt")
# ============================
# 1. Tipo de variable (estructura)
# ============================
estructura <- data.frame(estructura = capture.output(str(cartagena$servicios)))
tabla7 <- estructura %>%
kable("html", caption = "Estructura de la variable: Carencia de servicios públicos") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
save_kable(tabla7, "results/tabla7.html")
# ============================
# 2. Tablas sin y con ponderación
# ============================
# Sin ponderar
tabla_simple_serv <- cartagena %>%
count(servicios) %>%
mutate(
n_sinpond = as.numeric(n),
porc_sinpond = round(100 * n / sum(n), 1)
) %>%
select(servicios, n_sinpond, porc_sinpond)
# Ponderada (con factor de expansión)
tabla_pond_serv <- cartagena %>%
group_by(servicios) %>%
summarise(n_pond = sum(f_exp_hog, na.rm = TRUE), .groups = "drop") %>%
mutate(porc_pond = round(100 * n_pond / sum(n_pond), 1))
# Unir tablas lado a lado
tabla8 <- tabla_simple_serv %>%
full_join(tabla_pond_serv, by = "servicios") %>%
mutate(
servicios_label = case_when(
servicios == 0 ~ "Sin carencias",
servicios == 1 ~ "1 carencia",
servicios == 2 ~ "2 carencias",
servicios == 3 ~ "3 carencias",
servicios == 4 ~ "4 carencias",
servicios == 5 ~ "5 carencias",
TRUE ~ "No sabe/NA"
)
) %>%
select(servicios_label, n_sinpond, porc_sinpond, n_pond, porc_pond)
# ============================
# 3. Guardar tabla en HTML
# ============================
tabla8 <- tabla_comp_serv %>%
kable(
"html",
caption = "Distribución de carencias en servicios públicos: comparación ponderada vs sin ponderar",
col.names = c(
"Categoría",
"N (sin ponderar)", "% (sin ponderar)",
"N (ponderado)", "% (ponderado)"
),
digits = 1
) %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed")
) %>%
add_header_above(c(" " = 1, "Sin ponderar" = 2, "Ponderado" = 2))
save_kable(tabla8, "results/tabla8.html")
# ============================
# 4. Gráfico comparativo (PNG)
# ============================
tabla_grafico <- tabla_comp_serv %>%
tidyr::pivot_longer(cols = c(porc_sinpond, porc_pond),
names_to = "tipo",
values_to = "porc") %>%
mutate(
tipo = ifelse(tipo == "porc_pond", "Ponderado", "Sin ponderar")
)
grafico6 <- ggplot(tabla_grafico, aes(x = servicios_label, y = porc, fill = tipo)) +
geom_col(position = "dodge", alpha = 0.9) +
geom_text(
aes(label = paste0(porc, "%")),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5
) +
scale_fill_manual(values = c("Sin ponderar" = "#999999", "Ponderado" = "#003366")) +
labs(
title = "Carencias en servicios básicos en los hogares",
subtitle = "Comparación entre resultados sin ponderar y ponderados",
x = "Número de carencias reportadas",
y = "Porcentaje de hogares",
fill = "Tipo de cálculo"
) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(size = 11, margin = margin(t = 10)),
axis.title.y = element_text(size = 11, margin = margin(r = 10)),
plot.title = element_text(face = "bold", size = 16, hjust = 0),
plot.subtitle = element_text(size = 12, hjust = 0),
plot.margin = unit(c(1, 1, 1, 1), "cm")
)
ggsave("results/grafico6.png",
plot = grafico6, width = 10, height = 6, dpi = 300)
# ============================
# 5. Notas de método
# ============================
notas_metodo <- "
Notas de método:
- La variable 'servicios' mide el número de carencias en el acceso a servicios básicos (0 a 5).
- La tabla presenta los conteos (N) y proporciones (%) comparando resultados sin ponderar y ponderados por el factor de expansión del hogar (f_exp_hog).
- Los valores ponderados reflejan la distribución poblacional representativa.
- No se identificaron valores fuera del rango 0–5.
- Los valores NA se reportan explícitamente y no se imputaron.
- Las categorías con frecuencia menor al 3% se mantuvieron dada su relevancia sustantiva.
"
writeLines(notas_metodo, "results/notas_metodo_servicios.txt")
# ============================================================
# Análisis variable: head_female (Gráfico 7 / Tabla 9)
# ============================================================
library(dplyr)
library(ggplot2)
library(kableExtra)
# 1. Tipo de variable
estructura <- data.frame(estructura = capture.output(str(cartagena$head_female)))
# 2. Tabla sin ponderar
tabla_sin_pond <- cartagena %>%
count(head_female) %>%
mutate(
Sin_ponderar_n = as.numeric(n),
Sin_ponderar_% = round(100 * n / sum(n), 1),
